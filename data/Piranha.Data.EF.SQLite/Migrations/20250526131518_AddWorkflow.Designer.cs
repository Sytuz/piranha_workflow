// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Piranha.Data.EF.SQLite;

namespace Piranha.Data.EF.SQLite.Migrations
{
    [DbContext(typeof(SQLiteDb))]
    [Migration("20250526131518_AddWorkflow")]
    partial class AddWorkflow
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Piranha.Data.ContentWorkflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentId")
                        .HasDatabaseName("IX_Piranha_ContentWorkflows_ContentId");

                    b.HasIndex("CurrentState")
                        .HasDatabaseName("IX_Piranha_ContentWorkflows_CurrentState");

                    b.ToTable("Piranha_ContentWorkflows", (string)null);
                });

            modelBuilder.Entity("Piranha.Data.WorkflowStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("FromState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PerformedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("ToState")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowId")
                        .HasDatabaseName("IX_Piranha_WorkflowSteps_WorkflowId");

                    b.ToTable("Piranha_WorkflowSteps", (string)null);
                });

            modelBuilder.Entity("Piranha.Data.WorkflowStep", b =>
                {
                    b.HasOne("Piranha.Data.ContentWorkflow", "Workflow")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("Piranha.Data.ContentWorkflow", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
