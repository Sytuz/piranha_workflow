piranha.mytasks=new function(){"use strict";var t=this;t.load=function(){t.init()},t.init=function(){document.getElementById("mytasks")&&new Vue({el:"#mytasks",data:{loading:!0,items:[],state:"all",pendingAction:null,selectedTask:null,actionData:{comments:"",reason:""},executingAction:!1,actionError:null},computed:{filteredItems:function(){var t=this;return this.items.filter((function(e){return"all"===t.state||("pending"===t.state?"Pending"===e.status||"Draft"===e.status||"InReview"===e.status:("approved"===t.state||t.state,!0))}))}},mounted:function(){this.loadTasks()},methods:{loadTasks:function(){var t=this;t.loading=!0;var e=piranha.baseUrl+"manager/api/mytasks";"all"!==t.state&&(e+="?filter="+encodeURIComponent(t.state)),fetch(e,{method:"GET",headers:{"Content-Type":"application/json"}}).then((function(t){if(!t.ok)throw new Error("Failed to load my tasks data");return t.json()})).then((function(e){var n=e.tasks;Array.isArray(n)||(n=Object.values(n||{}));var a=n.map((function(t,e){return{id:t.id,contentTitle:t.contentTitle,contentType:t.contentType,workflowName:t.workflowName,currentStage:t.currentStage,status:t.status,created:t.timestamp,notes:t.notes,availableActions:t.availableActions||[],editUrl:t.editUrl}}));t.items=a,t.loading=!1})).catch((function(e){console.error("Error loading my tasks:",e),piranha.notifications.push({type:"error",body:e.message||"Failed to load my tasks"}),t.loading=!1}))},setStatus:function(t){this.state=t,this.loadTasks()},canEdit:function(t){return t.availableActions&&t.availableActions.includes("edit")},canView:function(t){return t.availableActions&&t.availableActions.includes("view")},canApprove:function(t){return t.availableActions&&t.availableActions.includes("approve")},canReject:function(t){return t.availableActions&&t.availableActions.includes("reject")},getEditButtonText:function(t){return"Draft"===t.status?"Edit":"View"},getEditButtonIcon:function(t){return"Draft"===t.status?"fas fa-edit":"fas fa-eye"},approveTask:function(t){this.executeAction({type:"approve",label:"Approve Task"},t)},rejectTask:function(t){this.executeAction({type:"reject",label:"Reject Task"},t)},executeAction:function(t,e){this.pendingAction=null,this.selectedTask=null,this.actionData={comments:"",reason:""},this.actionError=null,this.executingAction=!1;var n=this;this.$nextTick((function(){n.pendingAction=t,n.selectedTask=e,$("#actionConfirmationModal").modal("show")}))},confirmAction:function(){var t=this;if("reject"!==t.pendingAction.type||t.actionData.reason.trim()){t.executingAction=!0,t.actionError=null;var e="",n={};"approve"===t.pendingAction.type?(e="approve",t.actionData.comments&&(n.comments=t.actionData.comments)):"reject"===t.pendingAction.type&&(e="reject",n.reason=t.actionData.reason),fetch(piranha.baseUrl+"manager/api/mytasks/"+t.selectedTask.id+"/"+e,{method:"POST",headers:{"Content-Type":"application/json",...piranha.utils.antiForgeryHeaders()},credentials:"same-origin",body:JSON.stringify(n)}).then((function(t){if(!t.ok)throw new Error("Failed to execute action");return t.json()})).then((function(e){t.executingAction=!1,$("#actionConfirmationModal").modal("hide"),piranha.notifications.push({type:"success",body:"Task "+t.pendingAction.type+"d successfully"}),t.loadTasks()})).catch((function(e){t.executingAction=!1,t.actionError=e.message||"Failed to execute action.",piranha.notifications.push({type:"error",body:t.actionError})}))}else t.actionError="Rejection reason is required."},cancelAction:function(){this.pendingAction=null,this.selectedTask=null,this.actionData={comments:"",reason:""},this.actionError=null,this.executingAction=!1,$("#actionConfirmationModal").modal("hide")},formatDate:function(t){if(!t)return"";var e=new Date(t);return e.toLocaleDateString()+" "+e.toLocaleTimeString()},getStatusBadgeClass:function(t){switch(t){case"InReview":return"badge-warning";case"Published":return"badge-success";case"Rejected":return"badge-danger";default:return"badge-secondary"}},refreshTasks:function(){this.loadTasks()}},updated:function(){}})}};